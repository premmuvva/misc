# Generated by Django 2.1.3 on 2018-11-05 09:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField(default='2018-09-08')),
                ('country', models.CharField(default='India', max_length=15)),
                ('email', models.EmailField(max_length=30, unique=True)),
                ('phone_number', models.IntegerField()),
                ('user_address', models.CharField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceLineItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_number', models.IntegerField()),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Magazine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('magazine_name', models.CharField(max_length=100, unique=True)),
                ('price', models.IntegerField(default=199)),
                ('magazine_cover', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='MagazineStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20)),
                ('magazine_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magzapp.Magazine')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceFrequency',
            fields=[
                ('reference_code', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserInvoice',
            fields=[
                ('invoice_number', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('date_of_invoice', models.DateField()),
                ('invoice_amount', models.IntegerField()),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_subscription_started', models.DateTimeField()),
                ('date_subscription_ended', models.DateTimeField()),
                ('magazine_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magzapp.Magazine')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='magazine',
            name='reference_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magzapp.ReferenceFrequency'),
        ),
        migrations.AddField(
            model_name='magazine',
            name='supplier_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magzapp.Supplier'),
        ),
        migrations.AddField(
            model_name='invoicelineitems',
            name='delivery_date',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magzapp.UserSubscription'),
        ),
        migrations.AddField(
            model_name='invoicelineitems',
            name='invoice_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magzapp.UserInvoice'),
        ),
        migrations.AddField(
            model_name='invoicelineitems',
            name='magazine_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='magzapp.Magazine'),
        ),
    ]
